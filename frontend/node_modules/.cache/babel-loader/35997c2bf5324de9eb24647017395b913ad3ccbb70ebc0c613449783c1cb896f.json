{"ast":null,"code":"function analyzeJavaScript(code, vulnerabilities) {\n  const issues = [];\n  const lines = code.split('\\n');\n  vulnerabilities.forEach(vulnerability => {\n    lines.forEach((line, index) => {\n      if (line.includes(vulnerability.pattern)) {\n        issues.push({\n          line: index + 1,\n          issue: vulnerability.description\n        });\n      }\n    });\n  });\n  return issues;\n}\nfunction analyzeC(code, vulnerabilities) {\n  const issues = [];\n  const lines = code.split('\\n');\n  vulnerabilities.forEach(vulnerability => {\n    lines.forEach((line, index) => {\n      if (line.includes(vulnerability.pattern)) {\n        issues.push({\n          line: index + 1,\n          issue: vulnerability.description\n        });\n      }\n    });\n  });\n  return issues;\n}\nfunction analyzePython(code, vulnerabilities) {\n  const issues = [];\n  const lines = code.split('\\n');\n  vulnerabilities.forEach(vulnerability => {\n    lines.forEach((line, index) => {\n      if (line.includes(vulnerability.pattern)) {\n        issues.push({\n          line: index + 1,\n          issue: vulnerability.description\n        });\n      }\n    });\n  });\n  return issues;\n}\nfunction analyzeCode(language, code, vulnerabilities) {\n  switch (language) {\n    case 'javascript':\n      return analyzeJavaScript(code, vulnerabilities);\n    case 'c':\n      return analyzeC(code, vulnerabilities);\n    case 'python':\n      return analyzePython(code, vulnerabilities);\n    default:\n      return [];\n  }\n}\nmodule.exports = {\n  analyzeCode\n};","map":{"version":3,"names":["analyzeJavaScript","code","vulnerabilities","issues","lines","split","forEach","vulnerability","line","index","includes","pattern","push","issue","description","analyzeC","analyzePython","analyzeCode","language","module","exports"],"sources":["/Users/ruslanpaskudnyk/Desktop/code-analyser/code-analyzer-frontend/frontend/src/components/AnalysisResult.js"],"sourcesContent":["function analyzeJavaScript(code, vulnerabilities) {\n    const issues = [];\n    const lines = code.split('\\n');\n    vulnerabilities.forEach(vulnerability => {\n        lines.forEach((line, index) => {\n            if (line.includes(vulnerability.pattern)) {\n                issues.push({\n                    line: index + 1,\n                    issue: vulnerability.description\n                });\n            }\n        });\n    });\n    return issues;\n}\n\nfunction analyzeC(code, vulnerabilities) {\n    const issues = [];\n    const lines = code.split('\\n');\n    vulnerabilities.forEach(vulnerability => {\n        lines.forEach((line, index) => {\n            if (line.includes(vulnerability.pattern)) {\n                issues.push({\n                    line: index + 1,\n                    issue: vulnerability.description\n                });\n            }\n        });\n    });\n    return issues;\n}\n\nfunction analyzePython(code, vulnerabilities) {\n    const issues = [];\n    const lines = code.split('\\n');\n    vulnerabilities.forEach(vulnerability => {\n        lines.forEach((line, index) => {\n            if (line.includes(vulnerability.pattern)) {\n                issues.push({\n                    line: index + 1,\n                    issue: vulnerability.description\n                });\n            }\n        });\n    });\n    return issues;\n}\n\nfunction analyzeCode(language, code, vulnerabilities) {\n    switch (language) {\n        case 'javascript':\n            return analyzeJavaScript(code, vulnerabilities);\n        case 'c':\n            return analyzeC(code, vulnerabilities);\n        case 'python':\n            return analyzePython(code, vulnerabilities);\n        default:\n            return [];\n    }\n}\n\nmodule.exports = { analyzeCode };\n"],"mappings":"AAAA,SAASA,iBAAiBA,CAACC,IAAI,EAAEC,eAAe,EAAE;EAC9C,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAAC,IAAI,CAAC;EAC9BH,eAAe,CAACI,OAAO,CAACC,aAAa,IAAI;IACrCH,KAAK,CAACE,OAAO,CAAC,CAACE,IAAI,EAAEC,KAAK,KAAK;MAC3B,IAAID,IAAI,CAACE,QAAQ,CAACH,aAAa,CAACI,OAAO,CAAC,EAAE;QACtCR,MAAM,CAACS,IAAI,CAAC;UACRJ,IAAI,EAAEC,KAAK,GAAG,CAAC;UACfI,KAAK,EAAEN,aAAa,CAACO;QACzB,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAOX,MAAM;AACjB;AAEA,SAASY,QAAQA,CAACd,IAAI,EAAEC,eAAe,EAAE;EACrC,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAAC,IAAI,CAAC;EAC9BH,eAAe,CAACI,OAAO,CAACC,aAAa,IAAI;IACrCH,KAAK,CAACE,OAAO,CAAC,CAACE,IAAI,EAAEC,KAAK,KAAK;MAC3B,IAAID,IAAI,CAACE,QAAQ,CAACH,aAAa,CAACI,OAAO,CAAC,EAAE;QACtCR,MAAM,CAACS,IAAI,CAAC;UACRJ,IAAI,EAAEC,KAAK,GAAG,CAAC;UACfI,KAAK,EAAEN,aAAa,CAACO;QACzB,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAOX,MAAM;AACjB;AAEA,SAASa,aAAaA,CAACf,IAAI,EAAEC,eAAe,EAAE;EAC1C,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAAC,IAAI,CAAC;EAC9BH,eAAe,CAACI,OAAO,CAACC,aAAa,IAAI;IACrCH,KAAK,CAACE,OAAO,CAAC,CAACE,IAAI,EAAEC,KAAK,KAAK;MAC3B,IAAID,IAAI,CAACE,QAAQ,CAACH,aAAa,CAACI,OAAO,CAAC,EAAE;QACtCR,MAAM,CAACS,IAAI,CAAC;UACRJ,IAAI,EAAEC,KAAK,GAAG,CAAC;UACfI,KAAK,EAAEN,aAAa,CAACO;QACzB,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAOX,MAAM;AACjB;AAEA,SAASc,WAAWA,CAACC,QAAQ,EAAEjB,IAAI,EAAEC,eAAe,EAAE;EAClD,QAAQgB,QAAQ;IACZ,KAAK,YAAY;MACb,OAAOlB,iBAAiB,CAACC,IAAI,EAAEC,eAAe,CAAC;IACnD,KAAK,GAAG;MACJ,OAAOa,QAAQ,CAACd,IAAI,EAAEC,eAAe,CAAC;IAC1C,KAAK,QAAQ;MACT,OAAOc,aAAa,CAACf,IAAI,EAAEC,eAAe,CAAC;IAC/C;MACI,OAAO,EAAE;EACjB;AACJ;AAEAiB,MAAM,CAACC,OAAO,GAAG;EAAEH;AAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}