{"ast":null,"code":"var _jsxFileName = \"/Users/ruslanpaskudnyk/Desktop/code-analyser/code-analyzer-frontend/frontend/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../style/FileUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onFileUpload\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    const reader = new FileReader();\n    reader.onload = event => {\n      setFileContent(event.target.result);\n    };\n    reader.readAsText(selectedFile);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('codefile', file);\n    try {\n      const response = await axios.post('http://localhost:3001/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      onFileUpload({\n        ...response.data,\n        rawContent: fileContent\n      });\n    } catch (error) {\n      console.error('Error uploading file', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"custom-file-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), \"\\u0412\\u0438\\u0431\\u0440\\u0430\\u0442\\u0438 \\u0444\\u0430\\u0439\\u043B\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"YK8rvBBp/t4sM8AOvlqr19oaA9U=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","onFileUpload","_s","file","setFile","fileContent","setFileContent","handleFileChange","e","selectedFile","target","files","reader","FileReader","onload","event","result","readAsText","handleUpload","formData","FormData","append","response","post","headers","data","rawContent","error","console","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ruslanpaskudnyk/Desktop/code-analyser/code-analyzer-frontend/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../style/FileUpload.css';\n\nconst FileUpload = ({ onFileUpload }) => {\n    const [file, setFile] = useState(null);\n    const [fileContent, setFileContent] = useState('');\n\n    const handleFileChange = (e) => {\n        const selectedFile = e.target.files[0];\n        setFile(selectedFile);\n\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            setFileContent(event.target.result);\n        };\n        reader.readAsText(selectedFile);\n    };\n\n    const handleUpload = async () => {\n        if (!file) return;\n\n        const formData = new FormData();\n        formData.append('codefile', file);\n\n        try {\n            const response = await axios.post('http://localhost:3001/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            onFileUpload({ ...response.data, rawContent: fileContent });\n        } catch (error) {\n            console.error('Error uploading file', error);\n        }\n    };\n\n    return (\n        <div className=\"file-upload\">\n            <label className=\"custom-file-upload\">\n                <input type=\"file\" onChange={handleFileChange} />\n                Вибрати файл\n            </label>\n            <button className=\"button\" onClick={handleUpload}>Upload</button>\n        </div>\n    );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCP,OAAO,CAACK,YAAY,CAAC;IAErB,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;MACvBT,cAAc,CAACS,KAAK,CAACL,MAAM,CAACM,MAAM,CAAC;IACvC,CAAC;IACDJ,MAAM,CAACK,UAAU,CAACR,YAAY,CAAC;EACnC,CAAC;EAED,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACf,IAAI,EAAE;IAEX,MAAMgB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAElB,IAAI,CAAC;IAEjC,IAAI;MACA,MAAMmB,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QACxEK,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEFvB,YAAY,CAAC;QAAE,GAAGqB,QAAQ,CAACG,IAAI;QAAEC,UAAU,EAAErB;MAAY,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACI5B,OAAA;IAAK8B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxB/B,OAAA;MAAO8B,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC/B,OAAA;QAAOgC,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEzB;MAAiB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,uEAErD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRrC,OAAA;MAAQ8B,SAAS,EAAC,QAAQ;MAACQ,OAAO,EAAEnB,YAAa;MAAAY,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd,CAAC;AAAClC,EAAA,CA3CIF,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}